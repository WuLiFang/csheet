---
kind: pipeline
name: main

steps:
  - name: build
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - cp /etc/ssl/certs/ca-certificates.crt ./config/
      - >-
        sed -i "s@https://github\.com/@https://git.wlf.com/@g" ./server/requirements.txt &&
        cat ./server/requirements.txt;
      - >-
        docker build
        --build-arg COMMIT_SHA1=${DRONE_COMMIT_SHA}
        --build-arg DEBIAN_MIRROR=http://mirrors.huaweicloud.com/debian
        --tag registry.wlf.com/csheet:latest
        --tag registry.wlf.com/csheet:${DRONE_TAG:-latest}
        .
      - 'docker push registry.wlf.com/csheet:latest'
  - name: build-docs
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - >-
        docker build
        --tag registry.wlf.com/csheet-docs:latest
        --tag registry.wlf.com/csheet-docs:${DRONE_TAG:-latest}
        ./docs
      - 'docker push registry.wlf.com/csheet-docs:latest'
  - name: push
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - 'docker push registry.wlf.com/csheet:${DRONE_TAG}'
    when:
      event:
        - tag
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
name: deploy

clone:
  disable: true
steps:
  - name: deploy
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: SSH_HOST
      port:
        from_secret: SSH_PORT
      username:
        from_secret: SSH_USER
      password:
        from_secret: SSH_PASSWORD
      script:
        - cd /srv/csheet
        - docker-compose pull
        - docker-compose up -d
      command_timeout: 3m
depends_on:
  - main
trigger:
  status:
    - success
  branch:
    - master
---
kind: pipeline
name: notification

clone:
  disable: true
steps:
  - name: rocket-chat
    image: mike1pol/drone-rocket
    settings:
      url:
        from_secret: ROCKETCHAT_URL
      user_id:
        from_secret: ROCKETCHAT_USER_ID
      token:
        from_secret: ROCKETCHAT_TOKEN
      channel:
        from_secret: ROCKETCHAT_CHANNEL
      message:
        '**{{ build.status }}** {{ repo.fullName }}[#{{ build.number }}]({{ build.link }}) ({{ build.event }})

        [{{ truncate build.commit 8 }}](${DRONE_COMMIT_LINK}) on `{{ build.branch }}` by _{{ build.author }}_

        {{build.message}}'
depends_on:
  - main
trigger:
  status:
    - success
    - failure
