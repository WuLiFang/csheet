---
kind: pipeline
name: main

steps:
  - name: build
    image: docker:stable-git
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - git fetch origin 'refs/tags/*:refs/tags/*'
      - RELEASE=$(git describe --always --match 'v*.*.*')
      - >-
        docker build
        --build-arg "HTTP_PROXY=$${HTTP_PROXY}"
        --build-arg "HTTPS_PROXY=$${HTTPS_PROXY}"
        --build-arg "RELEASE=$${RELEASE}"
        --label "repo=${DRONE_REPO}"
        --label "commit-sha=${DRONE_COMMIT_SHA}"
        --tag registry.wlf.com/csheet:${DRONE_COMMIT_SHA}
        .
  - name: push(master)
    image: docker:stable-git
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - >-
        docker tag
        registry.wlf.com/csheet:${DRONE_COMMIT_SHA}
        registry.wlf.com/csheet:latest
      - 'docker push registry.wlf.com/csheet:latest'
    when:
      branch:
        - master
  - name: push(tag)
    image: docker:stable-git
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - >-
        docker tag
        registry.wlf.com/csheet:${DRONE_COMMIT_SHA}
        registry.wlf.com/csheet:${DRONE_TAG}
      - 'docker push registry.wlf.com/csheet:${DRONE_TAG}'
    when:
      event:
        - tag
  - name: clean
    image: docker:stable-git
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - 'docker image rm registry.wlf.com/csheet:${DRONE_COMMIT_SHA}'
      - 'docker image prune -f --filter "label=repo=${DRONE_REPO}"'
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
name: deploy

clone:
  disable: true
steps:
  - name: deploy
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: SSH_HOST
      port:
        from_secret: SSH_PORT
      username:
        from_secret: SSH_USER
      password:
        from_secret: SSH_PASSWORD
      script:
        - cd /srv/csheet
        - docker-compose pull -q
        - >-
          docker-compose up
          --detach
          --always-recreate-deps
      command_timeout: 3m
depends_on:
  - main
trigger:
  status:
    - success
  branch:
    - master
  event:
    - cron
  cron:
    - nightly
---
kind: pipeline
name: notification

clone:
  disable: true
steps:
  - name: rocket-chat
    image: mike1pol/drone-rocket@sha256:6148c807bc3986509fcb8d63736ab33c7355d9d65ba640e00f09d63c8febfa94
    failure: ignore
    settings:
      url:
        from_secret: ROCKETCHAT_URL
      user_id:
        from_secret: ROCKETCHAT_USER_ID
      token:
        from_secret: ROCKETCHAT_TOKEN
      channel:
        from_secret: ROCKETCHAT_CHANNEL
      message:
        '**{{ build.status }}** {{ repo.fullName }}[#{{ build.number }}]({{ build.link }}) ({{ build.event }})

        [{{ truncate build.commit 8 }}](${DRONE_COMMIT_LINK}) on `{{ build.branch }}` by _{{ build.author }}_

        {{build.message}}'
depends_on:
  - main
trigger:
  status:
    - success
    - failure
