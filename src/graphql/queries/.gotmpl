{{- define "Node" }}
{{- .Node | default (regexReplaceAll "s$" .Name "" | upperFirst) }}
{{- end }}

{{- define "import" }}
import extractNodes, { NodeType } from '@/utils/extractNodes';
import { computed } from "@vue/composition-api"
{{- end }}

{{- define "before" }}
export type {{ template "Node" . }} = NodeType<{{ .Name }}['{{ .Name }}']>;
{{- end }}

{{- define "options" }}
    update(data): {{ template "Node" . }}[] {
      return extractNodes(data.{{ .Name }});
    },
{{- end }}

{{- define "extendUseQueryType" }}
    nodes: Ref<{{ template "Node" . }}[]>
{{- end }}

{{- define "extendUseQuery" }}
    nodes: computed(() => extractNodes(data.value?.{{ .Name }}))
{{- end }}

{{- define "after" }}

export async function find(variables: {{ .Name }}Variables): Promise<{{ template "Node" . }}[]> {
  return extractNodes((await query(variables)).data.{{ .Name }});
}
{{- end }}
