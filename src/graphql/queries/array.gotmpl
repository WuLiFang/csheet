{{- define "Item" }}
{{- .Item | default (regexReplaceAll "s$" .Name "" | upperFirst) }}
{{- end }}

{{- define "before" }}
export type {{ template "Item" . }} = NonNullable<{{ .Name }}['{{ .Name }}']>[0];
{{- end }}

{{- define "options" }}
    update(data): {{ template "Item" . }}[] {
      return data.{{ .Name }} ?? [];
    },
{{- end }}


{{- define "after" }}

export async function find(
{{- if not .NoVariables }}
  variables: {{ .Name }}Variables,
{{- end }}
): Promise<{{ template "Item" . }}[]> {
  const { data } = await apolloClient.query<{{ .Name }}, {{ .Name }}Variables>({
    query: require('./{{ .Name }}.gql'),
{{- if not .NoVariables }}
    variables,
{{- end }}
  });

  return data.{{ .Name }} ?? [];
}
{{- end }}
