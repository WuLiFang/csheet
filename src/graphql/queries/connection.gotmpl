{{- define "Node" }}
{{- .Node | default (regexReplaceAll "s$" .Name "" | upperFirst) }}
{{- end }}

{{- define "import" }}
import extractNodes, { NodeType } from '@/utils/extractNodes';
import { apolloClient } from "@/client"
{{- end }}

{{- define "before" }}
export type {{ template "Node" . }} = NodeType<{{ .Name }}['{{ .Name }}']>;
{{- end }}

{{- define "options" }}
    update(data): {{ template "Node" . }}[] {
      return extractNodes(data.{{ .Name }});
    },
{{- end }}


{{- define "after" }}

export async function find(variables: {{ .Name }}Variables): Promise<{{ template "Node" . }}[]> {
  const { data } = await apolloClient.query<{{ .Name }}, {{ .Name }}Variables>({
    query: require('./{{ .Name }}.gql'),
    variables,
  });

  return extractNodes(data.{{ .Name }});
}
{{- end }}
