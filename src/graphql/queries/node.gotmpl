{{- define "Node" }}
{{- .Node | default (regexReplaceAll "Node$" .Name "" | upperFirst) }}
{{- end }}

{{- define "before" }}
export type {{ template "Node" . }} = {{ .Name }}['node'] & { __typename: '{{ template "Node" . }}' };

function castNode(node: {{.Name}}['node'] | null | undefined ): {{ template "Node" . }} | undefined {
    return node?.__typename === '{{ template "Node" . }}' ? node : undefined;
}
{{- end }}

{{- define "options" }}
    update(data): {{ template "Node" . }} | undefined {
      return castNode(data.node);
    },
{{- end }}


{{- define "after" }}

export async function findById(id: string): Promise<{{ template "Node" . }} | undefined> {
  if (!id) {
    return;
  }
  return castNode((await (query({ id }))).data.node);
}
{{- end }}
