// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/99designs/gqlgen/graphql"
	"github.com/WuLiFang/csheet/v6/pkg/cgteamwork"
	"github.com/WuLiFang/csheet/v6/pkg/models/collection"
	"github.com/WuLiFang/csheet/v6/pkg/models/file"
	"github.com/WuLiFang/csheet/v6/pkg/models/presentation"
)

type Node interface {
	IsNode()
}

// Autogenerated input type of BackupDatabase
type BackupDatabaseInput struct {
	AdminToken       string  `json:"adminToken"`
	ClientMutationID *string `json:"clientMutationId"`
}

// Autogenerated return type of BackupDatabase
type BackupDatabasePayload struct {
	Created          *file.File `json:"created"`
	ClientMutationID *string    `json:"clientMutationId"`
}

type ClientConfig struct {
	SentryDsn        *string  `json:"sentryDSN"`
	IssueTrackerURL  *string  `json:"issueTrackerURL"`
	EnableCGTeamwork bool     `json:"enableCGTeamwork"`
	FolderInclude    []string `json:"folderInclude"`
}

// Autogenerated input type of CollectFromCGTeamwork
type CollectFromCGTeamworkInput struct {
	Database         string  `json:"database"`
	Prefix           string  `json:"prefix"`
	Pipeline         string  `json:"pipeline"`
	ClientMutationID *string `json:"clientMutationId"`
}

// Autogenerated return type of CollectFromCGTeamwork
type CollectFromCGTeamworkPayload struct {
	OriginPrefix     string  `json:"originPrefix"`
	CreatedCount     int     `json:"createdCount"`
	UpdatedCount     int     `json:"updatedCount"`
	ClientMutationID *string `json:"clientMutationId"`
}

// Autogenerated input type of CollectFromFolder
type CollectFromFolderInput struct {
	Root             string  `json:"root"`
	ClientMutationID *string `json:"clientMutationId"`
}

// Autogenerated return type of CollectFromFolder
type CollectFromFolderPayload struct {
	OriginPrefix     string  `json:"originPrefix"`
	CreatedCount     int     `json:"createdCount"`
	UpdatedCount     int     `json:"updatedCount"`
	ClientMutationID *string `json:"clientMutationId"`
}

type CollectionCGTeamworkNote struct {
	Pipeline string            `json:"pipeline"`
	Notes    []cgteamwork.Note `json:"notes"`
}

type CollectionConnection struct {
	Edges    []*CollectionEdge        `json:"edges"`
	Nodes    []*collection.Collection `json:"nodes"`
	PageInfo *PageInfo                `json:"pageInfo"`
}

type CollectionEdge struct {
	Cursor string                 `json:"cursor"`
	Node   *collection.Collection `json:"node"`
}

// Autogenerated input type of CreateCGTeamworkNote
type CreateCGTeamworkNoteInput struct {
	Data             []CreateCGTeamworkNoteInputData `json:"data"`
	Username         string                          `json:"username"`
	Password         string                          `json:"password"`
	ClientMutationID *string                         `json:"clientMutationId"`
}

type CreateCGTeamworkNoteInputData struct {
	// collection id
	ID       string           `json:"id"`
	Pipeline string           `json:"pipeline"`
	HTML     string           `json:"html"`
	Images   []graphql.Upload `json:"images"`
}

// Autogenerated return type of CreateCGTeamworkNote
type CreateCGTeamworkNotePayload struct {
	UpdatedCollections []collection.Collection `json:"updatedCollections"`
	CreatedCount       int                     `json:"createdCount"`
	ClientMutationID   *string                 `json:"clientMutationId"`
}

// Autogenerated input type of DeleteCGTeamworkNote
type DeleteCGTeamworkNoteInput struct {
	ID               []string `json:"id"`
	Username         string   `json:"username"`
	Password         string   `json:"password"`
	ClientMutationID *string  `json:"clientMutationId"`
}

// Autogenerated return type of DeleteCGTeamworkNote
type DeleteCGTeamworkNotePayload struct {
	DeletedCount     int     `json:"deletedCount"`
	ClientMutationID *string `json:"clientMutationId"`
}

type PageInfo struct {
	StartCursor     *string `json:"startCursor"`
	EndCursor       *string `json:"endCursor"`
	HasNextPage     bool    `json:"hasNextPage"`
	HasPreviousPage bool    `json:"hasPreviousPage"`
}

// Autogenerated input type of RestoreDatabase
type RestoreDatabaseInput struct {
	AdminToken       string  `json:"adminToken"`
	BackupFile       string  `json:"backupFile"`
	SkipDrop         *bool   `json:"skipDrop"`
	SkipBackup       *bool   `json:"skipBackup"`
	ClientMutationID *string `json:"clientMutationId"`
}

// Autogenerated return type of RestoreDatabase
type RestoreDatabasePayload struct {
	Backup           *file.File `json:"backup"`
	IsDropped        bool       `json:"isDropped"`
	ClientMutationID *string    `json:"clientMutationId"`
}

// The connection type for String.
type StringConnection struct {
	// A list of edges.
	Edges []*StringEdge `json:"edges"`
	// A list of nodes.
	Nodes []*string `json:"nodes"`
	// Information to aid in pagination.
	PageInfo *PageInfo `json:"pageInfo"`
}

type StringEdge struct {
	// The item at the end of the edge.
	Node *string `json:"node"`
	// A cursor for use in pagination.
	Cursor string `json:"cursor"`
}

type StringEntry struct {
	// key
	K string `json:"k"`
	// value
	V string `json:"v"`
}

// Autogenerated input type of UpdateCGTeamworkFlow
type UpdateCGTeamworkFlowInput struct {
	Data             []UpdateCGTeamworkFlowInputData `json:"data"`
	Username         string                          `json:"username"`
	Password         string                          `json:"password"`
	ClientMutationID *string                         `json:"clientMutationId"`
}

type UpdateCGTeamworkFlowInputData struct {
	ID     string `json:"id"`
	Stage  string `json:"stage"`
	Status string `json:"status"`
	// Default to collection pipeline.
	Pipeline *string `json:"pipeline"`
	// HTML note message
	Note   *string          `json:"note"`
	Images []graphql.Upload `json:"images"`
}

// Autogenerated return type of UpdateCGTeamworkFlow
type UpdateCGTeamworkFlowPayload struct {
	Updated          []collection.Collection `json:"updated"`
	ClientMutationID *string                 `json:"clientMutationId"`
}

// Autogenerated input type of UpdateCollection
type UpdateCollectionInput struct {
	Data             []UpdateCollectionInputData `json:"data"`
	ClientMutationID *string                     `json:"clientMutationId"`
}

type UpdateCollectionInputData struct {
	ID   string   `json:"id"`
	Tags []string `json:"tags"`
}

// Autogenerated input type of UpdateCollectionMetadata
type UpdateCollectionMetadataInput struct {
	Data             []UpdateCollectionMetadataInputData `json:"data"`
	ClientMutationID *string                             `json:"clientMutationId"`
}

type UpdateCollectionMetadataInputData struct {
	ID    string `json:"id"`
	Key   string `json:"key"`
	Value string `json:"value"`
}

// Autogenerated return type of UpdateCollectionMetadata
type UpdateCollectionMetadataPayload struct {
	Updated          []collection.Collection `json:"updated"`
	ClientMutationID *string                 `json:"clientMutationId"`
}

// Autogenerated return type of UpdateCollection
type UpdateCollectionPayload struct {
	Updated          []collection.Collection `json:"updated"`
	ClientMutationID *string                 `json:"clientMutationId"`
}

// Autogenerated input type of UpdatePresentationMetadata
type UpdatePresentationMetadataInput struct {
	Data             []UpdatePresentationMetadataInputData `json:"data"`
	ClientMutationID *string                               `json:"clientMutationId"`
}

type UpdatePresentationMetadataInputData struct {
	ID    string `json:"id"`
	Key   string `json:"key"`
	Value string `json:"value"`
}

// Autogenerated return type of UpdatePresentationMetadata
type UpdatePresentationMetadataPayload struct {
	Updated          []presentation.Presentation `json:"updated"`
	ClientMutationID *string                     `json:"clientMutationId"`
}

type WebFile struct {
	URL string `json:"url"`
}
